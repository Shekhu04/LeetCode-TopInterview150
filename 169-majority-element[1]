{"payload":{"allShortcutsEnabled":false,"path":"169-majority-element","repo":{"id":580539104,"defaultBranch":"main","name":"Leet-Code","ownerLogin":"Shekhu04","currentUserCanPush":false,"isFork":false,"isEmpty":false,"createdAt":"2022-12-20T20:15:55.000Z","ownerAvatar":"https://avatars.githubusercontent.com/u/107641403?v=4","public":true,"private":false,"isOrgOwned":false},"currentUser":null,"refInfo":{"name":"24ef5262f6531f9d891ad2bb9564ce9218c324d1","listCacheKey":"v0:1671567401.9108942","canEdit":false,"refType":"tree","currentOid":"24ef5262f6531f9d891ad2bb9564ce9218c324d1"},"tree":{"items":[{"name":"README.md","path":"169-majority-element/README.md","contentType":"file"},{"name":"majority-element.cpp","path":"169-majority-element/majority-element.cpp","contentType":"file"}],"templateDirectorySuggestionUrl":null,"readme":{"displayName":"README.md","richText":"<article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><h2 tabindex=\"-1\" dir=\"auto\"><a id=\"user-content-majority-element\" class=\"anchor\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#majority-element\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a><a href=\"https://leetcode.com/problems/majority-element\" rel=\"nofollow\">Majority Element</a></h2> <p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://camo.githubusercontent.com/0c1ed374ac2c05d7451262343439d03d5140ae41328d85395e86fcaffd5ec83d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446966666963756c74792d456173792d627269676874677265656e\"><img src=\"https://camo.githubusercontent.com/0c1ed374ac2c05d7451262343439d03d5140ae41328d85395e86fcaffd5ec83d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446966666963756c74792d456173792d627269676874677265656e\" alt=\"Difficulty: Easy\" data-canonical-src=\"https://img.shields.io/badge/Difficulty-Easy-brightgreen\" style=\"max-width: 100%;\"></a></p><hr><p dir=\"auto\">Given an array <code>nums</code> of size <code>n</code>, return <em>the majority element</em>.</p>\n<p dir=\"auto\">The majority element is the element that appears more than <code>⌊n / 2⌋</code> times. You may assume that the majority element always exists in the array.</p>\n<p dir=\"auto\"> </p>\n<p dir=\"auto\"><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [3,2,3]\n<strong>Output:</strong> 3\n</pre><p dir=\"auto\"><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [2,2,1,1,1,2,2]\n<strong>Output:</strong> 2\n</pre>\n<p dir=\"auto\"> </p>\n<p dir=\"auto\"><strong>Constraints:</strong></p>\n<ul dir=\"auto\">\n\t<li><code>n == nums.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n</ul>\n<p dir=\"auto\"> </p>\n<strong>Follow-up:</strong> Could you solve the problem in linear time and in <code>O(1)</code> space?\n</article>","errorMessage":null,"headerInfo":{"toc":[{"level":2,"text":"Majority Element","anchor":"majority-element","htmlText":"Majority Element"}],"siteNavLoginPath":"/login?return_to=https%3A%2F%2Fgithub.com%2FShekhu04%2FLeet-Code%2Ftree%2F24ef5262f6531f9d891ad2bb9564ce9218c324d1%2F169-majority-element"}},"totalCount":2,"showBranchInfobar":false},"fileTree":{"":{"items":[{"name":"1-two-sum","path":"1-two-sum","contentType":"directory"},{"name":"141-linked-list-cycle","path":"141-linked-list-cycle","contentType":"directory"},{"name":"169-majority-element","path":"169-majority-element","contentType":"directory"},{"name":"26-remove-duplicates-from-sorted-array","path":"26-remove-duplicates-from-sorted-array","contentType":"directory"},{"name":"35-search-insert-position","path":"35-search-insert-position","contentType":"directory"},{"name":"1.twoSum.cpp","path":"1.twoSum.cpp","contentType":"file"},{"name":"100.Same Tree.cpp","path":"100.Same Tree.cpp","contentType":"file"},{"name":"1009.Complement_of_base_10_integer.cpp","path":"1009.Complement_of_base_10_integer.cpp","contentType":"file"},{"name":"101-Symmetric_Tree.cpp","path":"101-Symmetric_Tree.cpp","contentType":"file"},{"name":"104. Maximum_depth_of_binary_tree.cpp","path":"104. Maximum_depth_of_binary_tree.cpp","contentType":"file"},{"name":"1047-Remove_all_adjacent_duplicates_in_a_string.cpp","path":"1047-Remove_all_adjacent_duplicates_in_a_string.cpp","contentType":"file"},{"name":"105-ConstructBinaryTreeFromPredorderAndInorderTraversal.cpp","path":"105-ConstructBinaryTreeFromPredorderAndInorderTraversal.cpp","contentType":"file"},{"name":"108-Convert_Sorted_Array_to_binary_search_tree.cpp","path":"108-Convert_Sorted_Array_to_binary_search_tree.cpp","contentType":"file"},{"name":"11.ContanierWithMostWater.cpp","path":"11.ContanierWithMostWater.cpp","contentType":"file"},{"name":"110.Balanced_binary_tree.cpp","path":"110.Balanced_binary_tree.cpp","contentType":"file"},{"name":"111.Minimum_depth_of_binary_tree.cpp","path":"111.Minimum_depth_of_binary_tree.cpp","contentType":"file"},{"name":"112-PathSum.cpp","path":"112-PathSum.cpp","contentType":"file"},{"name":"114-FlattenBinaryTreeToLinkedList.cpp","path":"114-FlattenBinaryTreeToLinkedList.cpp","contentType":"file"},{"name":"118-PascalsTriangle.cpp","path":"118-PascalsTriangle.cpp","contentType":"file"},{"name":"12.IntegerToRoman.cpp","path":"12.IntegerToRoman.cpp","contentType":"file"},{"name":"12.LongestCommonPrefix.cpp","path":"12.LongestCommonPrefix.cpp","contentType":"file"},{"name":"1207.UniqueNumberOfOccurence.cpp","path":"1207.UniqueNumberOfOccurence.cpp","contentType":"file"},{"name":"1281.Subtract_The_product_and_sum_of_digits_of_an_integer.cpp","path":"1281.Subtract_The_product_and_sum_of_digits_of_an_integer.cpp","contentType":"file"},{"name":"13-RomanToInteger.cpp","path":"13-RomanToInteger.cpp","contentType":"file"},{"name":"1342 - NumberOfStepsToReduceANumberToZero.cpp","path":"1342 - NumberOfStepsToReduceANumberToZero.cpp","contentType":"file"},{"name":"1356-Sort_integers_by_the_number_of_1_bits.cpp","path":"1356-Sort_integers_by_the_number_of_1_bits.cpp","contentType":"file"},{"name":"1365-How-many-numbers-are-smaller-than-the-current-number.cpp","path":"1365-How-many-numbers-are-smaller-than-the-current-number.cpp","contentType":"file"},{"name":"1374-GenerateAStringWithCharactersThatHaveOddCounts.cpp","path":"1374-GenerateAStringWithCharactersThatHaveOddCounts.cpp","contentType":"file"},{"name":"141-LinkedListCycle.cpp","path":"141-LinkedListCycle.cpp","contentType":"file"},{"name":"144 - BinaryTreePreorderTraversal(usingRecursion).cpp","path":"144 - BinaryTreePreorderTraversal(usingRecursion).cpp","contentType":"file"},{"name":"144 - BinaryTreePreorderTraversal(usingStack).cpp","path":"144 - BinaryTreePreorderTraversal(usingStack).cpp","contentType":"file"},{"name":"145-BinaryTreePostorderTraversal(usingRecursion).cpp","path":"145-BinaryTreePostorderTraversal(usingRecursion).cpp","contentType":"file"},{"name":"148-SortList","path":"148-SortList","contentType":"file"},{"name":"1512.NumberOfGoodPairs.cpp","path":"1512.NumberOfGoodPairs.cpp","contentType":"file"},{"name":"1561.MaximunNumberOfCoinsYouCanGet.js","path":"1561.MaximunNumberOfCoinsYouCanGet.js","contentType":"file"},{"name":"160-intersectionOf2linkedlist.cpp","path":"160-intersectionOf2linkedlist.cpp","contentType":"file"},{"name":"160-intersectionOf2linkedlistUsingFunction.cpp","path":"160-intersectionOf2linkedlistUsingFunction.cpp","contentType":"file"},{"name":"1685.SumOfAbsoluteDifferencesInASortedArray.js","path":"1685.SumOfAbsoluteDifferencesInASortedArray.js","contentType":"file"},{"name":"169-Majority_element.cpp","path":"169-Majority_element.cpp","contentType":"file"},{"name":"1727.LargestSubmatrixWithRearrangements.js","path":"1727.LargestSubmatrixWithRearrangements.js","contentType":"file"},{"name":"190. Reverse Bits.cpp","path":"190. Reverse Bits.cpp","contentType":"file"},{"name":"191.Number_of_1_Bits.cpp","path":"191.Number_of_1_Bits.cpp","contentType":"file"},{"name":"1910.Remove_all_occurences_of_a_substring.cpp","path":"1910.Remove_all_occurences_of_a_substring.cpp","contentType":"file"},{"name":"1929.Concatenation_of_array.cpp","path":"1929.Concatenation_of_array.cpp","contentType":"file"},{"name":"20-ValidParentheses.cpp","path":"20-ValidParentheses.cpp","contentType":"file"},{"name":"202- HappyNumbers.cpp","path":"202- HappyNumbers.cpp","contentType":"file"},{"name":"203.Remove_linked_list_elements.cpp","path":"203.Remove_linked_list_elements.cpp","contentType":"file"},{"name":"204.CountPrimes.cpp","path":"204.CountPrimes.cpp","contentType":"file"},{"name":"206-ReverseLinkedList.cpp","path":"206-ReverseLinkedList.cpp","contentType":"file"},{"name":"21-MergeTwoSortedList.cpp","path":"21-MergeTwoSortedList.cpp","contentType":"file"},{"name":"2160-MinimumSumOfFourDigitNumberAfterSplittingDigits.cpp","path":"2160-MinimumSumOfFourDigitNumberAfterSplittingDigits.cpp","contentType":"file"},{"name":"217-Contains_Duplicate.cpp","path":"217-Contains_Duplicate.cpp","contentType":"file"},{"name":"222.CountCompleteTreeNodes.cpp","path":"222.CountCompleteTreeNodes.cpp","contentType":"file"},{"name":"225.Implement_stack_using_queue.cpp","path":"225.Implement_stack_using_queue.cpp","contentType":"file"},{"name":"2265-Count_nodes-equal_to_average_of_subtree.cpp","path":"2265-Count_nodes-equal_to_average_of_subtree.cpp","contentType":"file"},{"name":"231.Power_of_two.cpp","path":"231.Power_of_two.cpp","contentType":"file"},{"name":"234.Palindrome_linked_list.cpp","path":"234.Palindrome_linked_list.cpp","contentType":"file"},{"name":"237.Delete_node_in_a_linkedlist.cpp","path":"237.Delete_node_in_a_linkedlist.cpp","contentType":"file"},{"name":"242.ValidAnagram.cpp","path":"242.ValidAnagram.cpp","contentType":"file"},{"name":"2442-Count Number of Distinct Integers after Reverse Operation.cpp","path":"2442-Count Number of Distinct Integers after Reverse Operation.cpp","contentType":"file"},{"name":"2469.Convert_the_temperature.cpp","path":"2469.Convert_the_temperature.cpp","contentType":"file"},{"name":"26. Remove Duplicates from Sorted Array.java","path":"26. Remove Duplicates from Sorted Array.java","contentType":"file"},{"name":"2656.Maximum_sum_with_k_elements.cpp","path":"2656.Maximum_sum_with_k_elements.cpp","contentType":"file"},{"name":"268 - Missing numbers.cpp","path":"268 - Missing numbers.cpp","contentType":"file"},{"name":"326. Power_of_three.cpp","path":"326. Power_of_three.cpp","contentType":"file"},{"name":"342.Power_of_four.cpp","path":"342.Power_of_four.cpp","contentType":"file"},{"name":"344.Reverse String","path":"344.Reverse String","contentType":"file"},{"name":"35- SearchInsertPosition.cpp","path":"35- SearchInsertPosition.cpp","contentType":"file"},{"name":"367.Valid_perfect_sqaure.cpp","path":"367.Valid_perfect_sqaure.cpp","contentType":"file"},{"name":"387-FirstUniqueCharacterInAString.cpp","path":"387-FirstUniqueCharacterInAString.cpp","contentType":"file"},{"name":"39.CombinationSum.cpp","path":"39.CombinationSum.cpp","contentType":"file"},{"name":"4.MedianOfTwoSortedArrays.cpp","path":"4.MedianOfTwoSortedArrays.cpp","contentType":"file"},{"name":"404.Sum_of_left_leaves.cpp","path":"404.Sum_of_left_leaves.cpp","contentType":"file"},{"name":"451.SortCharactersByFrequency.cpp","path":"451.SortCharactersByFrequency.cpp","contentType":"file"},{"name":"48.RotateImage.cpp","path":"48.RotateImage.cpp","contentType":"file"},{"name":"49.GroupAnagrams.cpp","path":"49.GroupAnagrams.cpp","contentType":"file"},{"name":"496-NextGreaterElement1.cpp","path":"496-NextGreaterElement1.cpp","contentType":"file"},{"name":"509-Fibonacci.cpp","path":"509-Fibonacci.cpp","contentType":"file"},{"name":"54.SpiralMatrix.cpp","path":"54.SpiralMatrix.cpp","contentType":"file"},{"name":"561-ArrayPartition.cpp","path":"561-ArrayPartition.cpp","contentType":"file"},{"name":"66.PlusOne.cpp","path":"66.PlusOne.cpp","contentType":"file"},{"name":"67.AddBinary.cpp","path":"67.AddBinary.cpp","contentType":"file"},{"name":"69-Sqrt(x).cpp","path":"69-Sqrt(x).cpp","contentType":"file"},{"name":"7-ReverseIntegers.cpp","path":"7-ReverseIntegers.cpp","contentType":"file"},{"name":"704.BinarySearch.cpp","path":"704.BinarySearch.cpp","contentType":"file"},{"name":"75-SortColors.cpp","path":"75-SortColors.cpp","contentType":"file"},{"name":"766.ToeplitzMatrix.cpp","path":"766.ToeplitzMatrix.cpp","contentType":"file"},{"name":"771- JewelsAndStones.cpp","path":"771- JewelsAndStones.cpp","contentType":"file"},{"name":"83-RemoveDuplicateFromSortedList.cpp","path":"83-RemoveDuplicateFromSortedList.cpp","contentType":"file"},{"name":"852-PeakIndexInAMountainArray.cpp","path":"852-PeakIndexInAMountainArray.cpp","contentType":"file"},{"name":"86-PartitionList.cpp","path":"86-PartitionList.cpp","contentType":"file"},{"name":"876-MIddleOfTheLinkedList.cpp","path":"876-MIddleOfTheLinkedList.cpp","contentType":"file"},{"name":"88.MergeSortedArrays.cpp","path":"88.MergeSortedArrays.cpp","contentType":"file"},{"name":"9. PalindromeNumber.cpp","path":"9. PalindromeNumber.cpp","contentType":"file"},{"name":"94.BinaryTreeInorderTraversal.cpp","path":"94.BinaryTreeInorderTraversal.cpp","contentType":"file"},{"name":"94.BinaryTreeInorderTraversalUsingStack.cpp","path":"94.BinaryTreeInorderTraversalUsingStack.cpp","contentType":"file"},{"name":"96-UniqueBinarySearchTrees.cpp","path":"96-UniqueBinarySearchTrees.cpp","contentType":"file"},{"name":"977.Square_of_a_sorted_array.cpp","path":"977.Square_of_a_sorted_array.cpp","contentType":"file"},{"name":"Find_The_Difference.cpp","path":"Find_The_Difference.cpp","contentType":"file"},{"name":"GuessNumberHigherOrLower-374.cpp","path":"GuessNumberHigherOrLower-374.cpp","contentType":"file"},{"name":"MoveZeroes.cpp","path":"MoveZeroes.cpp","contentType":"file"},{"name":"binarySearch704.cpp","path":"binarySearch704.cpp","contentType":"file"},{"name":"kth distinct string in an array.cpp","path":"kth distinct string in an array.cpp","contentType":"file"},{"name":"numberOfGoodPairs.cpp","path":"numberOfGoodPairs.cpp","contentType":"file"},{"name":"string.cpp","path":"string.cpp","contentType":"file"}],"totalCount":105}},"fileTreeProcessingTime":14.440527,"foldersToFetch":[],"treeExpanded":true,"symbolsExpanded":false,"csrf_tokens":{"/Shekhu04/Leet-Code/branches":{"post":"5OofDTdpArrfSV4wCsR6hIZZ9_0guFVrxIZVkGNG_WHBEQ74hwLXctcIfHT40yuydKhhYfp7akEf2WniVSG3ew"}}},"title":"Leet-Code/169-majority-element at 24ef5262f6531f9d891ad2bb9564ce9218c324d1 · Shekhu04/Leet-Code"}